{"version":3,"sources":["components/layout/SignedInLInks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/navbar.js","components/dashboard/Notifications.js","components/posts/PostSummary.js","components/posts/PostList.js","components/dashboard/Dashboard.js","components/posts/PostDetails.js","components/authentication/SignIn.js","components/authentication/SignUp.js","components/posts/CreatePost.js","store/actions/postActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/postReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","SignedInLInks","layout_SignedOutLinks","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","PostSummary","_ref","post","authorFirstName","authorLastName","createdAt","PostList","posts","posts_PostSummary","Dashboard","_this$props","this","posts_PostList","dashboard_Notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreatePost","createPost","history","push","authorId","add","objectSpread","Date","App","navbar","exact","path","component","PostDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","title","postReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2c7faa22.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\n\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/'>Profile</NavLink></li>\r\n            <li><NavLink to='/create'>New post</NavLink></li>\r\n            <li><a onClick={props.signOut}>Log Out</a></li>\r\n            <li><NavLink to='/' className='btn btn-floating pink lighten-1'>\r\n                {props.profile.initials}\r\n            </NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'LOGIN_ERROR', err });\r\n        });\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' })\r\n        }).catch(err => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err })\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signin'>Sign In</NavLink></li>\r\n            <li><NavLink to='/signup'>Sign Up</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport App from '../../App';\r\nimport SignedInLinks from './SignedInLInks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\nimport { link } from 'fs';\r\n\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;\r\n\r\n    //if user is signed in show following components\r\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\r\n\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo left\">AH Work</Link>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n    const { notifications } = props;\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-debth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        {notifications && notifications.map(item => {\r\n                            return (\r\n                                <li key={item.id}>\r\n                                    <span className=\"green-text\">{item.user} </span>\r\n                                    <span>{item.content}</span>\r\n                                    <div className=\"orange-text note-date\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst PostSummary = ({ post }) => {\r\n    return (\r\n        <div className=\"card z-debth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{post.content}</span>\r\n                <p>Posted by {post.authorFirstName} {post.authorLastName}</p>\r\n                <p className=\"grey-text\">{moment(post.createdAt.toDate()).fromNow()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostSummary","import React from 'react'\r\nimport PostSummary from './PostSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst PostList = ({ posts }) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            {posts && posts.map(post => {\r\n                return (\r\n                    <Link to={'/post/' + post.id} key={post.id} >\r\n                        <PostSummary post={post} />\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostList","import React, { Component } from 'react'\r\nimport Notifications from './Notifications'\r\nimport PostList from '../posts/PostList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        //console.log(this.props);\r\n        const { posts, auth, notifications } = this.props;\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <PostList posts={posts} />\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        posts: state.firestore.ordered.posts,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'posts', orderBy: ['createdAt', 'desc'] },\r\n        { collection: 'notifications', limit: 4, orderBy: ['time', 'desc'] }\r\n    ])\r\n)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst PostDetails = (props) => {\r\n    const { post, auth } = props;\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n    if (post) {\r\n        return (\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-debth-0\">\r\n                    <div className=\"card-content\">\r\n                        {/* <span className=\"card-title\">Post title - {id}</span> */}\r\n                        <p>{post.content}</p>\r\n                    </div>\r\n\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div>Posted by {post.authorFirstName} {post.authorLastName}</div>\r\n                        <div>{moment(post.createdAt.toDate()).fromNow()}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading post...</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const posts = state.firestore.data.posts;\r\n    const post = posts ? posts[id] : null\r\n    return {\r\n        post: post,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'posts' }\r\n    ])\r\n)(PostDetails)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n\r\n    render() {\r\n        const { authError, auth } = this.props;\r\n        if (auth.uid) return <Redirect to='/' />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn green lighten-1 z-debth-0\">Login</button>\r\n                    </div>\r\n                    <div className=\"red-text center\">\r\n                        {authError ? <p>{authError}</p> : null}\r\n                    </div>\r\n\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n    }\r\n\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if (auth.uid) return <Redirect to='/' />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn green lighten-1 z-debth-0\">SignUp</button>\r\n                    </div>\r\n                    <div className=\"red-text center\">\r\n                        {authError ? <p>{authError}</p> : null}\r\n                    </div>\r\n\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createPost } from '../../store/actions/postActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreatePost extends Component {\r\n    state = {\r\n        content: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //console.log(this.state)\r\n        this.props.createPost(this.state)\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        const { auth } = this.props;\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create post</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Say something...</label>\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn green lighten-1 z-debth-0\">Create post</button>\r\n                    </div>\r\n\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createPost: (post) => dispatch(createPost(post))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreatePost)\r\n","export const createPost = (post) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        //async call to db\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('posts').add({\r\n            ...post,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_POST', post });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_POST_ERROR', err });\r\n        })\r\n\r\n    }\r\n};","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport PostDetails from './components/posts/PostDetails'\nimport SignIn from './components/authentication/SignIn'\nimport SignUp from './components/authentication/SignUp'\nimport CreatePost from './components/posts/CreatePost'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route path='/post/:id' component={PostDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreatePost} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error');\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('sigout success');\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('Signup success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('Signup error')\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n    posts: [\r\n        { id: '1', title: 'VIP', content: 'Sinan Sakic Bombas' },\r\n        { id: '2', title: 'Grand', content: 'Sejo Kalac Kolac' },\r\n        { id: '3', title: 'Opstina', content: 'Pupan Ozdrljic Nacelnik' }\r\n    ]\r\n}\r\n\r\nconst postReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_POST':\r\n            console.log('created post', action.post)\r\n            return state;\r\n        case 'CREATE_POST_ERROR':\r\n            console.log('create post error', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default postReducer","import authReducer from './authReducer'\r\nimport postReducer from './postReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firenaseReducer, firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    post: postReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n\r\n});\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n    apiKey: \"AIzaSyBvduf-bp3tfVv3DqL61piwXaqqQX3i8lE\",\r\n    authDomain: \"social-network-clone-c2fa4.firebaseapp.com\",\r\n    databaseURL: \"https://social-network-clone-c2fa4.firebaseio.com\",\r\n    projectId: \"social-network-clone-c2fa4\",\r\n    storageBucket: \"social-network-clone-c2fa4.appspot.com\",\r\n    messagingSenderId: \"5683763830\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\nfirebase.firestore().settings({ timestampsInSnapshots: true })\r\n\r\nexport default firebase;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true })\n    )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n    serviceWorker.unregister();\n})\n\n\n"],"sourceRoot":""}